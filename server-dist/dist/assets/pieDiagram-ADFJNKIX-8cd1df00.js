import{D as e,n as t,o as a,s as i,g as s,c as l,b as n,_ as r,l as o,t as c,d as p,E as d,I as u,L as g,M as h,N as m,k as f,O as x}from"./charts-7e225b83.js";import{p as w}from"./chunk-4BX2VUAB-712a8486.js";import{p as S}from"./mermaid-parser.core-8c16c01e.js";import"./vendor-f48b869f.js";import"./_baseUniq-3441c19b.js";import"./_basePickBy-b07d9240.js";import"./clone-6efa5987.js";var v=e.pie,y={sections:new Map,showData:!1,config:v},$=y.sections,b=y.showData,D=structuredClone(v),T={getConfig:r(()=>structuredClone(D),"getConfig"),clear:r(()=>{$=new Map,b=y.showData,c()},"clear"),setDiagramTitle:t,getDiagramTitle:a,setAccTitle:i,getAccTitle:s,setAccDescription:l,getAccDescription:n,addSection:r(({label:e,value:t})=>{if(t<0)throw new Error(`"${e}" has invalid value: ${t}. Negative values are not allowed in pie charts. All slice values must be >= 0.`);$.has(e)||($.set(e,t),o.debug(`added new section: ${e}, with value: ${t}`))},"addSection"),getSections:r(()=>$,"getSections"),setShowData:r(e=>{b=e},"setShowData"),getShowData:r(()=>b,"getShowData")},C=r((e,t)=>{w(e,t),t.setShowData(e.showData),e.sections.map(t.addSection)},"populateDb"),k={parse:r(async e=>{const t=await S("pie",e);o.debug(t),C(t,T)},"parse")},A=r(e=>`\n  .pieCircle{\n    stroke: ${e.pieStrokeColor};\n    stroke-width : ${e.pieStrokeWidth};\n    opacity : ${e.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${e.pieOuterStrokeColor};\n    stroke-width: ${e.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${e.pieTitleTextSize};\n    fill: ${e.pieTitleTextColor};\n    font-family: ${e.fontFamily};\n  }\n  .slice {\n    font-family: ${e.fontFamily};\n    fill: ${e.pieSectionTextColor};\n    font-size:${e.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${e.pieLegendTextColor};\n    font-family: ${e.fontFamily};\n    font-size: ${e.pieLegendTextSize};\n  }\n`,"getStyles"),j=r(e=>{const t=[...e.values()].reduce((e,t)=>e+t,0),a=[...e.entries()].map(([e,t])=>({label:e,value:t})).filter(e=>e.value/t*100>=1).sort((e,t)=>t.value-e.value);return x().value(e=>e.value)(a)},"createPieArcs"),z={parser:k,db:T,renderer:{draw:r((e,t,a,i)=>{o.debug("rendering pie chart\n"+e);const s=i.db,l=p(),n=d(s.getConfig(),l.pie),r=18,c=450,x=c,w=u(t),S=w.append("g");S.attr("transform","translate(225,225)");const{themeVariables:v}=l;let[y]=g(v.pieOuterStrokeWidth);y??(y=2);const $=n.textPosition,b=Math.min(x,c)/2-40,D=h().innerRadius(0).outerRadius(b),T=h().innerRadius(b*$).outerRadius(b*$);S.append("circle").attr("cx",0).attr("cy",0).attr("r",b+y/2).attr("class","pieOuterCircle");const C=s.getSections(),k=j(C),A=[v.pie1,v.pie2,v.pie3,v.pie4,v.pie5,v.pie6,v.pie7,v.pie8,v.pie9,v.pie10,v.pie11,v.pie12];let z=0;C.forEach(e=>{z+=e});const M=k.filter(e=>"0"!==(e.data.value/z*100).toFixed(0)),O=m(A);S.selectAll("mySlices").data(M).enter().append("path").attr("d",D).attr("fill",e=>O(e.data.label)).attr("class","pieCircle"),S.selectAll("mySlices").data(M).enter().append("text").text(e=>(e.data.value/z*100).toFixed(0)+"%").attr("transform",e=>"translate("+T.centroid(e)+")").style("text-anchor","middle").attr("class","slice"),S.append("text").text(s.getDiagramTitle()).attr("x",0).attr("y",-200).attr("class","pieTitleText");const B=[...C.entries()].map(([e,t])=>({label:e,value:t})),F=S.selectAll(".legend").data(B).enter().append("g").attr("class","legend").attr("transform",(e,t)=>"translate(216,"+(22*t-22*B.length/2)+")");F.append("rect").attr("width",r).attr("height",r).style("fill",e=>O(e.label)).style("stroke",e=>O(e.label)),F.append("text").attr("x",22).attr("y",14).text(e=>s.getShowData()?`${e.label} [${e.value}]`:e.label);const R=512+Math.max(...F.selectAll("text").nodes().map(e=>(null==e?void 0:e.getBoundingClientRect().width)??0));w.attr("viewBox",`0 0 ${R} 450`),f(w,c,R,n.useMaxWidth)},"draw")},styles:A};export{z as diagram};
