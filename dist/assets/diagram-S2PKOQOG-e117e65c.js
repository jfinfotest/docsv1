var t;import{D as e,s as a,g as r,n as s,o,b as i,c as n,_ as l,E as c,F as d,t as p,l as b,I as h,k}from"./charts-7e225b83.js";import{p as g}from"./chunk-4BX2VUAB-712a8486.js";import{p as f}from"./mermaid-parser.core-8c16c01e.js";import"./vendor-f48b869f.js";import"./_baseUniq-3441c19b.js";import"./_basePickBy-b07d9240.js";import"./clone-6efa5987.js";var u=e.packet,m=(l(t=class{constructor(){this.packet=[],this.setAccTitle=a,this.getAccTitle=r,this.setDiagramTitle=s,this.getDiagramTitle=o,this.getAccDescription=i,this.setAccDescription=n}getConfig(){const t=c({...u,...d().packet});return t.showBits&&(t.paddingY+=10),t}getPacket(){return this.packet}pushWord(t){t.length>0&&this.packet.push(t)}clear(){p(),this.packet=[]}},"PacketDB"),t),w=l((t,e)=>{g(t,e);let a=-1,r=[],s=1;const{bitsPerRow:o}=e.getConfig();for(let{start:i,end:n,bits:l,label:c}of t.blocks){if(void 0!==i&&void 0!==n&&n<i)throw new Error(`Packet block ${i} - ${n} is invalid. End must be greater than start.`);if(i??(i=a+1),i!==a+1)throw new Error(`Packet block ${i} - ${n??i} is not contiguous. It should start from ${a+1}.`);if(0===l)throw new Error(`Packet block ${i} is invalid. Cannot have a zero bit field.`);for(n??(n=i+(l??1)-1),l??(l=n-i+1),a=n,b.debug(`Packet block ${i} - ${a} with label ${c}`);r.length<=o+1&&e.getPacket().length<1e4;){const[t,a]=y({start:i,end:n,bits:l,label:c},s,o);if(r.push(t),t.end+1===s*o&&(e.pushWord(r),r=[],s++),!a)break;({start:i,end:n,bits:l,label:c}=a)}}e.pushWord(r)},"populate"),y=l((t,e,a)=>{if(void 0===t.start)throw new Error("start should have been set during first phase");if(void 0===t.end)throw new Error("end should have been set during first phase");if(t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);if(t.end+1<=e*a)return[t,void 0];const r=e*a-1,s=e*a;return[{start:t.start,end:r,label:t.label,bits:r-t.start},{start:s,end:t.end,label:t.label,bits:t.end-s}]},"getNextFittingBlock"),x={parser:{yy:void 0},parse:l(async t=>{var e;const a=await f("packet",t),r=null==(e=x.parser)?void 0:e.yy;if(!(r instanceof m))throw new Error("parser.parser?.yy was not a PacketDB. This is due to a bug within Mermaid, please report this issue at https://github.com/mermaid-js/mermaid/issues.");b.debug(a),w(a,r)},"parse")},$=l((t,e,a,r)=>{const s=r.db,o=s.getConfig(),{rowHeight:i,paddingY:n,bitWidth:l,bitsPerRow:c}=o,d=s.getPacket(),p=s.getDiagramTitle(),b=i+n,g=b*(d.length+1)-(p?0:i),f=l*c+2,u=h(e);u.attr("viewbox",`0 0 ${f} ${g}`),k(u,g,f,o.useMaxWidth);for(const[h,k]of d.entries())B(u,k,h,o);u.append("text").text(p).attr("x",f/2).attr("y",g-b/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")},"draw"),B=l((t,e,a,{rowHeight:r,paddingX:s,paddingY:o,bitWidth:i,bitsPerRow:n,showBits:l})=>{const c=t.append("g"),d=a*(r+o)+o;for(const p of e){const t=p.start%n*i+1,e=(p.end-p.start+1)*i-s;if(c.append("rect").attr("x",t).attr("y",d).attr("width",e).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",t+e/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(p.label),!l)continue;const a=p.end===p.start,o=d-2;c.append("text").attr("x",t+(a?e/2:0)).attr("y",o).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(p.start),a||c.append("text").attr("x",t+e).attr("y",o).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(p.end)}},"drawWord"),v={draw:$},C={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},P=l(({packet:t}={})=>{const e=c(C,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`},"styles"),z={parser:x,get db(){return new m},renderer:v,styles:P};export{z as diagram};
